hda6ldl121 = read.table("ATAC_hda6ldl12_1_body.tab")
hda6ldl122 = read.table("ATAC_hda6ldl12_2_body.tab")
ldl121 = read.table("ATAC_ldl12_1_body.tab")
ldl122 = read.table("ATAC_ldl12_2_body.tab")
siWT1 = read.table("siRNA_WT_1_body.tab")
siWT2 = read.table("siRNA_WT_2_body.tab")
siWT3 = read.table("siRNA_WT_3_body.tab")
sihda61 = read.table("siRNA_hda6_1_body.tab")
sihda62 = read.table("siRNA_hda6_2_body.tab")
sihda63 = read.table("siRNA_hda6_3_body.tab")
sihda6ldl121 = read.table("siRNA_hda6ldl12_1_body.tab")
sihda6ldl122 = read.table("siRNA_hda6ldl12_2_body.tab")
sihda6ldl123 = read.table("siRNA_hda6ldl12_3_body.tab")
sildl121 = read.table("siRNA_ldl12_1_body.tab")
sildl122 = read.table("siRNA_ldl12_2_body.tab")
sildl123 = read.table("siRNA_ldl12_3_body.tab")
TE= read.table("/work1/home/joweihsieh/20190731_HDA6/Analysis/heatmap/upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original_101_001_20220802.txt",header=T)
TE= read.table("upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original_101_001_20220802.txt",header=T)
#df = data.frame(row.names = WT1$V1, WT = (WT1$V6 + WT2$V6) /2, hda6 = (hda61$V6 + hda62$V6) /2, ldl12 = (ldl121$V6 + ldl122$V6) /2, hda6ldl12 = (hda6ldl121$V6 + hda6ldl122$V6) /2,   siWT = (siWT1$V6 + siWT2$V6 + siWT3$V6) /3, sihda6 = (sihda61$V6 + sihda62$V6 + sihda63$V6) /3, sildl12 = (sildl121$V6 + sildl122$V6 + sildl123$V6) /3, sihda6ldl12 = (sihda6ldl121$V6 + sihda6ldl122$V6 + sihda6ldl123$V6) /3)
df = data.frame(row.names = WT1$V1, WT = (WT1$V6 + WT2$V6) /2, hda6 = (hda61$V6 + hda62$V6) /2, ldl12 = (ldl121$V6 + ldl122$V6) /2, hda6ldl12 = (hda6ldl121$V6 + hda6ldl122$V6) /2)
df2 = merge(df, RNA[,c(1,24:27)],,by.x = 'row.names',by.y = 'Row.names')
df = data.frame(row.names = WT1$V1, WT = (WT1$V6 + WT2$V6) /2, hda6 = (hda61$V6 + hda62$V6) /2, ldl12 = (ldl121$V6 + ldl122$V6) /2, hda6ldl12 = (hda6ldl121$V6 + hda6ldl122$V6) /2)
head(df)
df2 = merge(df, RNA[,c(1,24:27)], by.x = 'row.names',by.y = 'Row.names')
RNA = read.table("/work1/home/yenmr/project/HDAC6/RNA/analysis/Exprssed_TE.txt",header=T)
WT1 = read.table("ATAC_WT_1_body.tab")
WT2 = read.table("ATAC_WT_2_body.tab")
hda61 = read.table("ATAC_hda6_1_body.tab")
hda62 = read.table("ATAC_hda6_2_body.tab")
hda6ldl121 = read.table("ATAC_hda6ldl12_1_body.tab")
hda6ldl122 = read.table("ATAC_hda6ldl12_2_body.tab")
ldl121 = read.table("ATAC_ldl12_1_body.tab")
ldl122 = read.table("ATAC_ldl12_2_body.tab")
TE= read.table("upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original_101_001_20220802.txt",header=T)
df = data.frame(row.names = WT1$V1, WT = (WT1$V6 + WT2$V6) /2, hda6 = (hda61$V6 + hda62$V6) /2, ldl12 = (ldl121$V6 + ldl122$V6) /2, hda6ldl12 = (hda6ldl121$V6 + hda6ldl122$V6) /2, WT1=WT1$V6, WT2=WT2$V6, hda61=hda61$V6, hda62=hda62$V6, ldl121 = ldl121$V6, ldl122 = ldl122$V6, hda6ldl121 = hda6ldl121$V6, hda6ldl122 = hda6ldl122$V6)
df$WT_max = apply(df[,c('WT1','WT2')],1,max)
df$hda6_min = apply(df[,c('hda61','hda62')],1,min)
df$ldl12_min = apply(df[,c('hda61','ldl122')],1,min)
df$hda6_opened = ifelse(df$WT_max < df$hda6_min, 'hda6_opened','closed')
df$ldl12_opened = ifelse(df$WT_max < df$ldl12_min, 'ldl12_opened','closed')
df2 = merge(df, RNA[,c(1,24:27)],by.x = 'row.names',by.y = 'Row.names')
RNA = read.table("Exprssed_TE.txt",header=T)
RNA$RNA_WT = (RNA$C_6 + RNA$C_7 + RNA$C_7_2) /3
RNA$RNA_hda6 = (RNA$a_6 + RNA$a_7) /2
RNA$RNA_ldl12 = (RNA$L12_6 + RNA$L12_7) / 2
RNA$RNA_hda6ldl12 = (RNA$L12a_6 + RNA$L12a_7) /2
df$hda6_opened = ifelse(df$WT_max < df$hda6_min, 'hda6_opened','closed')
df$ldl12_opened = ifelse(df$WT_max < df$ldl12_min, 'ldl12_opened','closed')
df2 = merge(df, RNA[,c(1,24:27)],by.x = 'row.names',by.y = 'Row.names')
row.names(df2) = df2$Row.names
df = df2[,2:ncol(df2)]
head(df)
table(df$hda6_opened)
table(df$ldl12_opened)
table(df$hda6_opened, df$ldl12_opened)
df_001 = df[row.names(df) %in% TE[TE$types == '0_0_1','Row.names'],]
table(df_001$hda6_opened)
table(df_001$ldl12_opened)
table(df_001$hda6_opened, df_001$ldl12_opened)
df_101 = df[row.names(df) %in% TE[TE$types == '1_0_1','Row.names'],]
table(df_101$hda6_opened)
table(df_101$ldl12_opened)
table(df_101$hda6_opened, df_101$ldl12_opened)
WT1 = read.table("ATAC_WT_1_body.tab")
WT2 = read.table("ATAC_WT_2_body.tab")
hda61 = read.table("ATAC_hda6_1_body.tab")
hda62 = read.table("ATAC_hda6_2_body.tab")
hda6ldl121 = read.table("ATAC_hda6ldl12_1_body.tab")
hda6ldl122 = read.table("ATAC_hda6ldl12_2_body.tab")
ldl121 = read.table("ATAC_ldl12_1_body.tab")
ldl122 = read.table("ATAC_ldl12_2_body.tab")
siWT1 = read.table("siRNA_WT_1_body.tab")
siWT2 = read.table("siRNA_WT_2_body.tab")
siWT3 = read.table("siRNA_WT_3_body.tab")
sihda61 = read.table("siRNA_hda6_1_body.tab")
sihda62 = read.table("siRNA_hda6_2_body.tab")
sihda63 = read.table("siRNA_hda6_3_body.tab")
sihda6ldl121 = read.table("siRNA_hda6ldl12_1_body.tab")
sihda6ldl122 = read.table("siRNA_hda6ldl12_2_body.tab")
sihda6ldl123 = read.table("siRNA_hda6ldl12_3_body.tab")
sildl121 = read.table("siRNA_ldl12_1_body.tab")
sildl122 = read.table("siRNA_ldl12_2_body.tab")
sildl123 = read.table("siRNA_ldl12_3_body.tab")
RNA = read.table("Exprssed_TE.txt",header=T)
RNA$RNA_WT = (RNA$C_6 + RNA$C_7 + RNA$C_7_2) /3
RNA$RNA_hda6 = (RNA$a_6 + RNA$a_7) /2
RNA$RNA_ldl12 = (RNA$L12_6 + RNA$L12_7) / 2
RNA$RNA_hda6ldl12 = (RNA$L12a_6 + RNA$L12a_7) /2
RNA = read.table("Exprssed_TE.txt",header=T)
RNA$RNA_WT = (RNA$C_6 + RNA$C_7 + RNA$C_7_2) /3
RNA$RNA_hda6 = (RNA$a_6 + RNA$a_7) /2
RNA$RNA_ldl12 = (RNA$L12_6 + RNA$L12_7) / 2
RNA$RNA_hda6ldl12 = (RNA$L12a_6 + RNA$L12a_7) /2
#TE= read.table("upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original_101_001_20220802.txt",header=T)
#df = data.frame(row.names = WT1$V1, WT = (WT1$V6 + WT2$V6) /2, hda6 = (hda61$V6 + hda62$V6) /2, ldl12 = (ldl121$V6 + ldl122$V6) /2, hda6ldl12 = (hda6ldl121$V6 + hda6ldl122$V6) /2,   siWT = (siWT1$V6 + siWT2$V6 + siWT3$V6) /3, sihda6 = (sihda61$V6 + sihda62$V6 + sihda63$V6) /3, sildl12 = (sildl121$V6 + sildl122$V6 + sildl123$V6) /3, sihda6ldl12 = (sihda6ldl121$V6 + sihda6ldl122$V6 + sihda6ldl123$V6) /3)
df = data.frame(row.names = WT1$V1, WT = (WT1$V6 + WT2$V6) /2, hda6 = (hda61$V6 + hda62$V6) /2, ldl12 = (ldl121$V6 + ldl122$V6) /2, hda6ldl12 = (hda6ldl121$V6 + hda6ldl122$V6) /2)
df2 = merge(df, RNA[,c(1,24:27)], by.x = 'row.names', by.y = 'Row.names')
row.names(df2) = df2$Row.names
df = df2[,2:9]
selected = read.table("tair10_synergistic_TE_001.bed")
df_001 = df[row.names(df) %in% selected$V4,]
png(file = 'Boxplot_ATAC_001.png',width = 1500, height=2000, res = 350)
#boxplot(df_001[,c(1,3,2,4)],ylim = c(0,150),ylab = 'ATAC-seq abundance (RPKM)',main = 'Double locked (001) N=104')
boxplot(df_001[,c(1,3,2,4)],ylim = c(0,100),ylab = 'ATAC-seq abundance (RPKM)',main = '001 N=104',outline=F)
dev.off()
write.table(df_001[,c(1,3,2,4)],file = 'ATAC_value_001.txt',sep = '\t',quote=F)
create_boxplot <- function(input_file, bed_file, output_image, output_data, ylim_range = c(0, 100), ylab_text = 'ATAC-seq abundance (RPKM)', main_text = 'Boxplot', outline = FALSE) {
#df <- read.table(input_file, header = TRUE, row.names = 1)
selected <- read.table(bed_file)
df_filtered <- df[row.names(df) %in% selected$V4,]
png(file = output_image, width = 1500, height = 2000, res = 350)
boxplot(df_filtered[,c(1, 3, 2, 4)], ylim = ylim_range, ylab = ylab_text, main = main_text, outline = outline)
dev.off()
write.table(df_filtered[,c(1, 3, 2, 4)], file = output_data, sep = '\t', quote = FALSE)
}
create_boxplot(input_file = RNA,
bed_file = "tair10_synergistic_TE_HDA6_predominant.bed",
output_image = "Boxplot_ATAC_HDA6_predominant.png",
output_data = "ATAC_value_HDA6_predominant.txt",
ylim_range = c(0, 100),
ylab_text = 'ATAC-seq abundance (RPKM)',
main_text = 'HDA6_predominant',
outline = FALSE)
create_boxplot(input_file = RNA,
bed_file = "tair10_synergistic_TE_double_locked.bed",
output_image = "Boxplot_ATAC_double_locked.png",
output_data = "ATAC_value_double_locked.txt",
ylim_range = c(0, 100),
ylab_text = 'ATAC-seq abundance (RPKM)',
main_text = 'double_locked',
outline = FALSE)
RNA = read.table("Exprssed_TE.txt",header=T)
RNA$RNA_WT = (RNA$C_6 + RNA$C_7 + RNA$C_7_2) /3
RNA$RNA_hda6 = (RNA$a_6 + RNA$a_7) /2
RNA$RNA_ldl12 = (RNA$L12_6 + RNA$L12_7) / 2
RNA$RNA_hda6ldl12 = (RNA$L12a_6 + RNA$L12a_7) /2
#TE= read.table("upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original_101_001_20220802.txt",header=T)
#df = data.frame(row.names = WT1$V1, WT = (WT1$V6 + WT2$V6) /2, hda6 = (hda61$V6 + hda62$V6) /2, ldl12 = (ldl121$V6 + ldl122$V6) /2, hda6ldl12 = (hda6ldl121$V6 + hda6ldl122$V6) /2,   siWT = (siWT1$V6 + siWT2$V6 + siWT3$V6) /3, sihda6 = (sihda61$V6 + sihda62$V6 + sihda63$V6) /3, sildl12 = (sildl121$V6 + sildl122$V6 + sildl123$V6) /3, sihda6ldl12 = (sihda6ldl121$V6 + sihda6ldl122$V6 + sihda6ldl123$V6) /3)
df = data.frame(row.names = WT1$V1, WT = (WT1$V6 + WT2$V6) /2, hda6 = (hda61$V6 + hda62$V6) /2, ldl12 = (ldl121$V6 + ldl122$V6) /2, hda6ldl12 = (hda6ldl121$V6 + hda6ldl122$V6) /2)
df2 = merge(df, RNA[,c(1,24:27)], by.x = 'row.names', by.y = 'Row.names')
row.names(df2) = df2$Row.names
df = df2[,2:9]
create_boxplot <- function(input_file, bed_file, output_image, output_data, ylim_range = c(0, 100), ylab_text = 'ATAC-seq abundance (RPKM)', main_text = 'Boxplot', outline = FALSE, col = NA) {
#df <- read.table(input_file, header = TRUE, row.names = 1)
selected <- read.table(bed_file)
df_filtered <- df[row.names(df) %in% selected$V4,]
png(file = output_image, width = 1500, height = 2000, res = 350)
boxplot(df_filtered[,c(1, 3, 2, 4)], ylim = ylim_range, ylab = ylab_text, main = main_text, outline = outline)
dev.off()
write.table(df_filtered[,c(1, 3, 2, 4)], file = output_data, sep = '\t', quote = FALSE)
}
create_boxplot(input_file = RNA,
bed_file = "tair10_synergistic_TE_HDA6_predominant.bed",
output_image = "Boxplot_ATAC_HDA6_predominant.png",
output_data = "ATAC_value_HDA6_predominant.txt",
ylim_range = c(0, 100),
ylab_text = 'ATAC-seq abundance (RPKM)',
main_text = 'HDA6_predominant',
outline = FALSE)
create_boxplot(input_file = RNA,
bed_file = "tair10_synergistic_TE_double_locked.bed",
output_image = "Boxplot_ATAC_double_locked.png",
output_data = "ATAC_value_double_locked.txt",
ylim_range = c(0, 100),
ylab_text = 'ATAC-seq abundance (RPKM)',
main_text = 'double_locked',
outline = FALSE)
RNA = read.table("Exprssed_TE.txt",header=T)
RNA$RNA_WT = (RNA$C_6 + RNA$C_7 + RNA$C_7_2) /3
RNA$RNA_hda6 = (RNA$a_6 + RNA$a_7) /2
RNA$RNA_ldl12 = (RNA$L12_6 + RNA$L12_7) / 2
RNA$RNA_hda6ldl12 = (RNA$L12a_6 + RNA$L12a_7) /2
#TE= read.table("upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original_101_001_20220802.txt",header=T)
#df = data.frame(row.names = WT1$V1, WT = (WT1$V6 + WT2$V6) /2, hda6 = (hda61$V6 + hda62$V6) /2, ldl12 = (ldl121$V6 + ldl122$V6) /2, hda6ldl12 = (hda6ldl121$V6 + hda6ldl122$V6) /2,   siWT = (siWT1$V6 + siWT2$V6 + siWT3$V6) /3, sihda6 = (sihda61$V6 + sihda62$V6 + sihda63$V6) /3, sildl12 = (sildl121$V6 + sildl122$V6 + sildl123$V6) /3, sihda6ldl12 = (sihda6ldl121$V6 + sihda6ldl122$V6 + sihda6ldl123$V6) /3)
df = data.frame(row.names = WT1$V1, WT = (WT1$V6 + WT2$V6) /2, hda6 = (hda61$V6 + hda62$V6) /2, ldl12 = (ldl121$V6 + ldl122$V6) /2, hda6ldl12 = (hda6ldl121$V6 + hda6ldl122$V6) /2)
df2 = merge(df, RNA[,c(1,24:27)], by.x = 'row.names', by.y = 'Row.names')
row.names(df2) = df2$Row.names
df = df2[,2:9]
create_boxplot <- function(input_file, bed_file, output_image, output_data, ylim_range = c(0, 100), ylab_text = 'ATAC-seq abundance (RPKM)', main_text = 'Boxplot', outline = FALSE) {
#df <- read.table(input_file, header = TRUE, row.names = 1)
selected <- read.table(bed_file)
df_filtered <- df[row.names(df) %in% selected$V4,]
png(file = output_image, width = 1500, height = 2000, res = 350)
boxplot(df_filtered[,c(1, 3, 2, 4)], ylim = ylim_range, ylab = ylab_text, main = main_text, outline = outline, col = NA)
dev.off()
write.table(df_filtered[,c(1, 3, 2, 4)], file = output_data, sep = '\t', quote = FALSE)
}
create_boxplot(input_file = RNA,
bed_file = "tair10_synergistic_TE_HDA6_predominant.bed",
output_image = "Boxplot_ATAC_HDA6_predominant.png",
output_data = "ATAC_value_HDA6_predominant.txt",
ylim_range = c(0, 100),
ylab_text = 'ATAC-seq abundance (RPKM)',
main_text = 'HDA6_predominant',
outline = FALSE)
create_boxplot(input_file = RNA,
bed_file = "tair10_synergistic_TE_double_locked.bed",
output_image = "Boxplot_ATAC_double_locked.png",
output_data = "ATAC_value_double_locked.txt",
ylim_range = c(0, 100),
ylab_text = 'ATAC-seq abundance (RPKM)',
main_text = 'double_locked',
outline = FALSE)
# Read ATAC-seq data
WT1 <- read.table("ATAC_WT_1_body.tab")
WT2 <- read.table("ATAC_WT_2_body.tab")
hda61 <- read.table("ATAC_hda6_1_body.tab")
hda62 <- read.table("ATAC_hda6_2_body.tab")
hda6ldl121 <- read.table("ATAC_hda6ldl12_1_body.tab")
hda6ldl122 <- read.table("ATAC_hda6ldl12_2_body.tab")
ldl121 <- read.table("ATAC_ldl12_1_body.tab")
ldl122 <- read.table("ATAC_ldl12_2_body.tab")
# Read RNA expression data and calculate means
RNA <- read.table("Exprssed_TE.txt", header = TRUE)
RNA$RNA_WT <- (RNA$C_6 + RNA$C_7 + RNA$C_7_2) / 3
RNA$RNA_hda6 <- (RNA$a_6 + RNA$a_7) / 2
RNA$RNA_ldl12 <- (RNA$L12_6 + RNA$L12_7) / 2
RNA$RNA_hda6ldl12 <- (RNA$L12a_6 + RNA$L12a_7) / 2
# Calculate ATAC-seq means and merge RNA data
df <- data.frame(
row.names = WT1$V1,
WT = (WT1$V6 + WT2$V6) / 2,
hda6 = (hda61$V6 + hda62$V6) / 2,
ldl12 = (ldl121$V6 + ldl122$V6) / 2,
hda6ldl12 = (hda6ldl121$V6 + hda6ldl122$V6) / 2
)
# Merge RNA data
df2 <- merge(df, RNA[, c(1, 24:27)], by.x = 'row.names', by.y = 'Row.names')
row.names(df2) <- df2$Row.names
df <- df2[, 2:9]
# Function to create boxplots
create_boxplot <- function(bed_file, output_image, output_data, ylim_range = c(0, 100), ylab_text = 'ATAC-seq abundance (RPKM)', main_text = 'Boxplot', outline = FALSE) {
selected <- read.table(bed_file)
df_filtered <- df[row.names(df) %in% selected$V4, ]
png(file = output_image, width = 1500, height = 2000, res = 350)
boxplot(df_filtered[, c(1, 3, 2, 4)], ylim = ylim_range, ylab = ylab_text, main = main_text, outline = outline, col = NA)
dev.off()
write.table(df_filtered[, c(1, 3, 2, 4)], file = output_data, sep = '\t', quote = FALSE)
print(c(colnames(df_filtered)[1], colnames(df_filtered)[2], t.test(df_filtered[,1], df_filtered[,2], paired = TRUE)$p.value))
print(c(colnames(df_filtered)[1], colnames(df_filtered)[3], t.test(df_filtered[,1], df_filtered[,3], paired = TRUE)$p.value))
print(c(colnames(df_filtered)[1], colnames(df_filtered)[4], t.test(df_filtered[,1], df_filtered[,4], paired = TRUE)$p.value))
print(c(colnames(df_filtered)[2], colnames(df_filtered)[3], t.test(df_filtered[,2], df_filtered[,3], paired = TRUE)$p.value))
print(c(colnames(df_filtered)[2], colnames(df_filtered)[4], t.test(df_filtered[,2], df_filtered[,4], paired = TRUE)$p.value))
print(c(colnames(df_filtered)[3], colnames(df_filtered)[4], t.test(df_filtered[,3], df_filtered[,4], paired = TRUE)$p.value))
}
# Call the function to generate boxplots
create_boxplot(
bed_file = "tair10_synergistic_TE_HDA6_predominant.bed",
output_image = "Boxplot_ATAC_HDA6_predominant.png",
output_data = "ATAC_value_HDA6_predominant.txt",
ylim_range = c(0, 100),
ylab_text = 'ATAC-seq abundance (RPKM)',
main_text = 'HDA6_predominant',
outline = FALSE
)
create_boxplot(
bed_file = "tair10_synergistic_TE_double_locked.bed",
output_image = "Boxplot_ATAC_double_locked.png",
output_data = "ATAC_value_double_locked.txt",
ylim_range = c(0, 100),
ylab_text = 'ATAC-seq abundance (RPKM)',
main_text = 'double_locked',
outline = FALSE
)
# Read ATAC-seq data
WT1 <- read.table("ATAC_WT_1_body.tab")
WT2 <- read.table("ATAC_WT_2_body.tab")
hda61 <- read.table("ATAC_hda6_1_body.tab")
hda62 <- read.table("ATAC_hda6_2_body.tab")
hda6ldl121 <- read.table("ATAC_hda6ldl12_1_body.tab")
hda6ldl122 <- read.table("ATAC_hda6ldl12_2_body.tab")
ldl121 <- read.table("ATAC_ldl12_1_body.tab")
ldl122 <- read.table("ATAC_ldl12_2_body.tab")
# Read RNA expression data and calculate means
RNA <- read.table("Exprssed_TE.txt", header = TRUE)
RNA$RNA_WT <- (RNA$C_6 + RNA$C_7 + RNA$C_7_2) / 3
RNA$RNA_hda6 <- (RNA$a_6 + RNA$a_7) / 2
RNA$RNA_ldl12 <- (RNA$L12_6 + RNA$L12_7) / 2
RNA$RNA_hda6ldl12 <- (RNA$L12a_6 + RNA$L12a_7) / 2
# Calculate ATAC-seq means and merge RNA data
df <- data.frame(
row.names = WT1$V1,
WT = (WT1$V6 + WT2$V6) / 2,
hda6 = (hda61$V6 + hda62$V6) / 2,
ldl12 = (ldl121$V6 + ldl122$V6) / 2,
hda6ldl12 = (hda6ldl121$V6 + hda6ldl122$V6) / 2
)
# Merge RNA data
df2 <- merge(df, RNA[, c(1, 24:27)], by.x = 'row.names', by.y = 'Row.names')
row.names(df2) <- df2$Row.names
df <- df2[, 2:9]
# Function to create boxplots
create_boxplot <- function(bed_file, output_image, output_data, ylim_range = c(0, 100), ylab_text = 'ATAC-seq abundance (RPKM)', main_text = 'Boxplot', outline = FALSE) {
selected <- read.table(bed_file)
df_filtered <- df[row.names(df) %in% selected$V4, ]
png(file = output_image, width = 1500, height = 2000, res = 350)
boxplot(df_filtered[, c(1, 3, 2, 4)], ylim = ylim_range, ylab = ylab_text, main = main_text, outline = outline, col = NA)
dev.off()
write.table(df_filtered[, c(1, 3, 2, 4)], file = output_data, sep = '\t', quote = FALSE)
print(c(colnames(df_filtered)[1], colnames(df_filtered)[2], t.test(df_filtered[,1], df_filtered[,2], paired = TRUE)$p.value))
print(c(colnames(df_filtered)[1], colnames(df_filtered)[3], t.test(df_filtered[,1], df_filtered[,3], paired = TRUE)$p.value))
print(c(colnames(df_filtered)[1], colnames(df_filtered)[4], t.test(df_filtered[,1], df_filtered[,4], paired = TRUE)$p.value))
#print(c(colnames(df_filtered)[2], colnames(df_filtered)[3], t.test(df_filtered[,2], df_filtered[,3], paired = TRUE)$p.value))
#print(c(colnames(df_filtered)[2], colnames(df_filtered)[4], t.test(df_filtered[,2], df_filtered[,4], paired = TRUE)$p.value))
#print(c(colnames(df_filtered)[3], colnames(df_filtered)[4], t.test(df_filtered[,3], df_filtered[,4], paired = TRUE)$p.value))
}
# Call the function to generate boxplots
create_boxplot(
bed_file = "tair10_synergistic_TE_HDA6_predominant.bed",
output_image = "Boxplot_ATAC_HDA6_predominant.png",
output_data = "ATAC_value_HDA6_predominant.txt",
ylim_range = c(0, 100),
ylab_text = 'ATAC-seq abundance (RPKM)',
main_text = 'HDA6_predominant',
outline = FALSE
)
create_boxplot(
bed_file = "tair10_synergistic_TE_double_locked.bed",
output_image = "Boxplot_ATAC_double_locked.png",
output_data = "ATAC_value_double_locked.txt",
ylim_range = c(0, 100),
ylab_text = 'ATAC-seq abundance (RPKM)',
main_text = 'double_locked',
outline = FALSE
)
library(ComplexHeatmap)
require(circlize)
#library(ggplot2)
library(gplots)
library(RColorBrewer)
DETE = read.table("/Users/joweihsieh/Dropbox/Prof.Chen/project/HDA6/WGBS/upDETE/upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original.txt",sep="\t",header=T)
DETE = read.table("/Users/joweihsieh/Dropbox/Prof.Chen/project/HDA6/WGBS/upDETE/upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original.txt",sep="\t",header=T)
DETE = read.table("/Users/joweihsieh/Dropbox/Prof.Chen/project/HDA6/WGBS/upDETE/upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original.txt",sep="\t",header=T)
DETE_exp = DETE[,c("C_mean","L12_mean", "a_mean", "L12a_mean")]
DETE_exp_2 = DETE_exp[rev(order(DETE_exp[,"a_mean"])),]
DETE_exp_2_log = log(DETE_exp_2+1,2)
effect2=(DETE_exp_2_log[,"L12a_mean"]-DETE_exp_2_log[,"C_mean"])-((DETE_exp_2_log[,"a_mean"]-DETE_exp_2_log[,"C_mean"])+(DETE_exp_2_log[,"L12_mean"]-DETE_exp_2_log[,"C_mean"]))
col_rnorm = colorRamp2(c(0, 8, 16), c("white","#F6CF7F", "darkred"))
ha3 = HeatmapAnnotation(
pt = anno_barplot(effect2,baseline=0),height = unit(1.5, "cm"))
# rank by HDA6
ht3 = Heatmap(DETE_exp_2_log, name = "log2 (RPKM)", col = col_rnorm,
row_title = "TEs",cluster_columns = F, cluster_rows =F,bottom_annotation = ha3)
library(RColorBrewer)
DETE = read.table("/Users/joweihsieh/Dropbox/Prof.Chen/project/HDA6/WGBS/upDETE/upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original.txt",sep="\t",header=T)
DETE_exp = DETE[,c("C_mean","L12_mean", "a_mean", "L12a_mean")]
DETE_exp_2 = DETE_exp[rev(order(DETE_exp[,"a_mean"])),]
Zoo_rank_data0=zoo(DETE_exp_2$C_mean)
require(circlize)
library(zoo)
library(ggplot2)
library(grid)
library(gridExtra)
library(zoo)
library(ComplexHeatmap)
require(circlize)
#library(ggplot2)
library(gplots)
library(RColorBrewer)
DETE = read.table("/Users/joweihsieh/Dropbox/Prof.Chen/project/HDA6/WGBS/upDETE/upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original.txt",sep="\t",header=T)
DETE_exp = DETE[,c("C_mean","L12_mean", "a_mean", "L12a_mean")]
DETE_exp_2 = DETE_exp[rev(order(DETE_exp[,"a_mean"])),]
Zoo_rank_data0=zoo(DETE_exp_2$C_mean)
Zoo_rank_data0_1=rollapply(Zoo_rank_data0,10, mean)
Zoo_rank_data1=zoo(DETE_exp_2$L12_mean)
Zoo_rank_data1_1=rollapply(Zoo_rank_data1,10, mean)
Zoo_rank_data2=zoo(DETE_exp_2$a_mean)
Zoo_rank_data2_1=rollapply(Zoo_rank_data2,10, mean)
Zoo_rank_data3=zoo(DETE_exp_2$L12a_mean)
Zoo_rank_data3_1=rollapply(Zoo_rank_data3,10, mean)
row=seq(1:length(Zoo_rank_data0_1))
data2 <- data.frame(row,Zoo_rank_data0_1, Zoo_rank_data1_1,Zoo_rank_data2_1,Zoo_rank_data3_1)
colnames(data2)=c("row","WT","LDL12","HDA6","HDA6LDL12")
data2_log = log(data2[,c(2:5)]+1,2)
effect2 = (data2_log[,"HDA6LDL12"]-data2_log[,"WT"])-((data2_log[,"HDA6"]-data2_log[,"WT"])+(data2_log[,"LDL12"]-data2_log[,"WT"]))
Mydata3_1=data.matrix(data2_log)
rownames(Mydata3_1)=rep('',nrow(data2_log))
#CG
#save rstudio pdf 10*15
mycol <- colorpanel(n=40,low="white",mid="#F6CF7F",high="darkred")
heatmap.2(as.matrix(Mydata3_1),key.title=NA,labRow=NA,col=mycol,trace="column",tracecol = "#797979",sepwidth=c(0.02,0.02,0.02),cex.lab=.4,mar=c(5,2),dendrogram='none', Rowv=FALSE, Colv=FALSE,colsep=c(1:8))
data2_log$effect = effect2
mycol2 <- colorpanel(n=40,low="white",mid="white",high="white")
heatmap.2(as.matrix(data2_log[,c(5,5)]),key.title=NA,labRow=NA,col=mycol,trace="column",tracecol = "#797979",sepwidth=c(0.02,0.02,0.02),cex.lab=.4,mar=c(5,2),dendrogram='none', Rowv=FALSE, Colv=FALSE,colsep=c(1:8))
heatmap.2(as.matrix(Mydata3_1),key.title=NA,labRow=NA,col=mycol,trace="column",tracecol = "#797979",sepwidth=c(0.02,0.02,0.02),cex.lab=.4,mar=c(5,2),dendrogram='none', Rowv=FALSE, Colv=FALSE,colsep=c(1:8))
library(grid)
library(gridExtra)
library(zoo)
library(ComplexHeatmap)
require(circlize)
#library(ggplot2)
library(gplots)
library(RColorBrewer)
DETE = read.table("upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original_101_001_cluster_20220804.txt",sep="\t", header=T)
setwd("/Users/joweihsieh/Dropbox/Prof.Chen/project/HDA6/GitHub/HDA6/Fig3.SynergisticRNAHeatmap_enrichment")
library(grid)
library(gridExtra)
library(zoo)
library(ComplexHeatmap)
require(circlize)
#library(ggplot2)
library(gplots)
library(RColorBrewer)
DETE = read.table("upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original_101_001_cluster_20220804.txt",sep="\t", header=T)
DETE_syn = DETE[DETE$types!="strong_weak_anta",]
DETE_syn_exp = DETE_syn[,c("Row.names","C_mean","L12_mean", "a_mean", "L12a_mean","DETE_exp_log.effect2","types")]
DETE_syn_exp_101 = DETE_syn_exp[DETE_syn_exp$types=="1_0_1",]
DETE_syn_exp_001 = DETE_syn_exp[DETE_syn_exp$types=="0_0_1",]
#as.matrix(DETE_syn_exp_101[,c(2:5)])
# mycol <- colorpanel(n=40,low="white",mid="#F6CF7F",high="darkred")
col_runif = colorRamp2(c(0,5,10), c("white","#F6CF7F","darkred"))
# col_runif = colorRamp2(c(0,5,10), c("white","#B0BC9E","#7B8F5D"))
ha_e_1 = Heatmap(as.matrix(DETE_syn_exp_101[,c(2:5)]), name = "RNA 101", col = col_runif, column_dend_height = unit(1, "cm"),
row_title="up-regulated TEs",cluster_columns =F, column_names_side = "bottom", cluster_rows = T)
ha_e_2 = Heatmap(as.matrix(DETE_syn_exp_001[,c(2:5)]), name = "RNA 101", col = col_runif, column_dend_height = unit(1, "cm"),
row_title="up-regulated TEs",cluster_columns =F, column_names_side = "bottom", cluster_rows = T)
ha_e_1
ha_e_2
ha_e_1 = Heatmap(as.matrix(DETE_syn_exp_101[,c(2:5)]), name = "RNA 101", col = col_runif, column_dend_height = unit(1, "cm"),
row_title="up-regulated TEs",cluster_columns = F, column_names_side = "bottom", cluster_rows = T, show_row_names = FALSE)
ha_e_1
heatmap.2(as.matrix(DETE_syn_exp_101[,c(2:5)]),key.title=NA,labRow=NA,col=mycol,trace="none",sepwidth=c(0.02,0.02,0.02),cex.lab=.4,mar=c(5,2),dendrogram='none', Rowv=FALSE, Colv=FALSE,colsep=c(1:8))
# RNA-seq heatmap for double_locked and HDA6_predomimant
library(grid)
library(gridExtra)
library(zoo)
library(ComplexHeatmap)
require(circlize)
#library(ggplot2)
library(gplots)
library(RColorBrewer)
DETE = read.table("upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original_101_001_cluster_20220804.txt",sep="\t", header=T)
DETE_syn = DETE[DETE$types!="strong_weak_anta",]
DETE_syn_exp = DETE_syn[,c("Row.names","C_mean","L12_mean", "a_mean", "L12a_mean","DETE_exp_log.effect2","types")]
DETE_syn_exp_HDA6_predomimant = DETE_syn_exp[DETE_syn_exp$types=="1_0_1",]
DETE_syn_exp_double_locked = DETE_syn_exp[DETE_syn_exp$types=="0_0_1",]
#as.matrix(DETE_syn_exp_HDA6_predomimant[,c(2:5)])
# mycol <- colorpanel(n=40,low="white",mid="#F6CF7F",high="darkred")
col_runif = colorRamp2(c(0,5,10), c("white","#F6CF7F","darkred"))
# col_runif = colorRamp2(c(0,5,10), c("white","#B0BC9E","#7B8F5D"))
ha_e_1 = Heatmap(as.matrix(DETE_syn_exp_HDA6_predomimant[,c(2:5)]), name = "RNA HDA6_predomimant", col = col_runif, column_dend_height = unit(1, "cm"),
row_title="up-regulated TEs",cluster_columns = F, column_names_side = "bottom", cluster_rows = T, show_row_names = FALSE)
ha_e_2 = Heatmap(as.matrix(DETE_syn_exp_double_locked[,c(2:5)]), name = "RNA HDA6_predomimant", col = col_runif, column_dend_height = unit(1, "cm"),
row_title="up-regulated TEs",cluster_columns = F, column_names_side = "bottom", cluster_rows = T, show_row_names = FALSE)
png("heatmap_upDETE_col_mutants_syn_HDA6_predomimant.png", width=1200, height=800, res=300)
ha_e_1
dev.off()
png("heatmap_upDETE_col_mutants_syn_double_locked.png", width=1200, height=800, res=300)
ha_e_2
dev.off()
# RNA-seq heatmap for double_locked and HDA6_predomimant
library(grid)
library(gridExtra)
library(zoo)
library(ComplexHeatmap)
require(circlize)
#library(ggplot2)
library(gplots)
library(RColorBrewer)
DETE = read.table("upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original_101_001_cluster_20220804.txt",sep="\t", header=T)
DETE_syn = DETE[DETE$types!="strong_weak_anta",]
DETE_syn_exp = DETE_syn[,c("Row.names","C_mean","L12_mean", "a_mean", "L12a_mean","DETE_exp_log.effect2","types")]
DETE_syn_exp_HDA6_predomimant = DETE_syn_exp[DETE_syn_exp$types=="1_0_1",]
DETE_syn_exp_double_locked = DETE_syn_exp[DETE_syn_exp$types=="0_0_1",]
#as.matrix(DETE_syn_exp_HDA6_predomimant[,c(2:5)])
# mycol <- colorpanel(n=40,low="white",mid="#F6CF7F",high="darkred")
col_runif = colorRamp2(c(0,5,10), c("white","#F6CF7F","darkred"))
# col_runif = colorRamp2(c(0,5,10), c("white","#B0BC9E","#7B8F5D"))
ha_e_1 = Heatmap(as.matrix(DETE_syn_exp_HDA6_predomimant[,c(2:5)]), name = "HDA6_predomimant", col = col_runif, column_dend_height = unit(1, "cm"),
row_title="up-regulated TEs",cluster_columns = F, column_names_side = "bottom", cluster_rows = T, show_row_names = FALSE)
ha_e_2 = Heatmap(as.matrix(DETE_syn_exp_double_locked[,c(2:5)]), name = "double_locked", col = col_runif, column_dend_height = unit(1, "cm"),
row_title="up-regulated TEs",cluster_columns = F, column_names_side = "bottom", cluster_rows = T, show_row_names = FALSE)
png("heatmap_upDETE_col_mutants_syn_HDA6_predomimant.png", width=1200, height=800, res=300)
ha_e_1
dev.off()
png("heatmap_upDETE_col_mutants_syn_double_locked.png", width=1200, height=800, res=300)
ha_e_2
dev.off()
# RNA-seq heatmap for double_locked and HDA6_predomimant
library(grid)
library(gridExtra)
library(zoo)
library(ComplexHeatmap)
require(circlize)
#library(ggplot2)
library(gplots)
library(RColorBrewer)
DETE = read.table("upTE_union_value_binding_H3Ac_H3K4me2_WGBS_type_original_101_001_cluster_20220804.txt",sep="\t", header=T)
DETE_syn = DETE[DETE$types!="strong_weak_anta",]
DETE_syn_exp = DETE_syn[,c("Row.names","C_mean","L12_mean", "a_mean", "L12a_mean","DETE_exp_log.effect2","types")]
DETE_syn_exp_HDA6_predomimant = DETE_syn_exp[DETE_syn_exp$types=="1_0_1",]
DETE_syn_exp_double_locked = DETE_syn_exp[DETE_syn_exp$types=="0_0_1",]
#as.matrix(DETE_syn_exp_HDA6_predomimant[,c(2:5)])
# mycol <- colorpanel(n=40,low="white",mid="#F6CF7F",high="darkred")
col_runif = colorRamp2(c(0,5,10), c("white","#F6CF7F","darkred"))
# col_runif = colorRamp2(c(0,5,10), c("white","#B0BC9E","#7B8F5D"))
ha_e_1 = Heatmap(as.matrix(DETE_syn_exp_HDA6_predomimant[,c(2:5)]), name = "HDA6_predomimant", col = col_runif, column_dend_height = unit(1, "cm"),
row_title="",cluster_columns = F, column_names_side = "bottom", cluster_rows = T, show_row_names = FALSE)
ha_e_2 = Heatmap(as.matrix(DETE_syn_exp_double_locked[,c(2:5)]), name = "double_locked", col = col_runif, column_dend_height = unit(1, "cm"),
row_title="",cluster_columns = F, column_names_side = "bottom", cluster_rows = T, show_row_names = FALSE)
png("heatmap_upDETE_col_mutants_syn_HDA6_predomimant.png", width=1200, height=800, res=300)
ha_e_1
dev.off()
png("heatmap_upDETE_col_mutants_syn_double_locked.png", width=1200, height=800, res=300)
ha_e_2
dev.off()
library(STRINGdb)
string_db <- STRINGdb$new(version = "12", species = 4565, score_threshold = 400, input_directory = "")
string_db
string_db
string_db <- STRINGdb$new(version = "11", species = 4565, score_threshold = 400, input_directory = "")
string_db
